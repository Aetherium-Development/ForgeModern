buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.1"
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "com.gradle.plugin-publish"
apply plugin: 'license'

project.ext {
    GIT_INFO = ""
    OLD_FORMAT = '2.1-SNAPSHOT'
}

group = 'net.minecraftforge.gradle'
version = "2.11"
archivesBaseName = 'ForgeGradle'
targetCompatibility = '1.6'
sourceCompatibility = '1.6'

repositories {
    mavenLocal()
    maven {
        name = "forge"
        url = "https://maven.minecraftforge.net"
    }
    maven {
        // because Srg2Source needs an eclipse dependency.
        name = "eclipse"
        url = "https://repo.eclipse.org/content/groups/eclipse/"
    }
    jcenter() // get as many deps from here as possible
    mavenCentral()

    // because SS and its snapshot
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }


    // because of the GradleStart stuff
    maven {
        name = "mojang"
        url = "https://libraries.minecraft.net/"
    }
}

configurations {
    deployerJars
    shade
    implementation.extendsFrom shade
}

dependencies {
    implementation gradleApi()

    // moved to the beginning to be the overrider
    implementation 'org.ow2.asm:asm-debug-all:5.0.3'
    implementation 'com.google.guava:guava:18.0'

    implementation 'net.sf.opencsv:opencsv:2.3' // reading CSVs.. also used by SpecialSource
    implementation 'com.cloudbees:diff4j:1.1' // for difing and patching
    implementation 'com.github.abrarsyed.jastyle:jAstyle:1.3' // formatting
    implementation 'net.sf.trove4j:trove4j:2.1.0' // because its awesome.

    implementation 'com.github.jponge:lzma-java:1.3' // replaces the LZMA binary
    implementation 'com.nothome:javaxdelta:2.0.1' // GDIFF implementation for BinPatches
    implementation 'com.google.code.gson:gson:2.2.4' // Used instead of Argo for buuilding changelog.
    implementation 'com.github.tony19:named-regexp:0.2.3' // 1.7 Named regexp features
    implementation 'net.minecraftforge:fernflower:2.0-SNAPSHOT' // Fernflower Forge edition

    shade 'net.md-5:SpecialSource:1.7.4' // deobf and reobs
    // implementation 'net.md-5:SpecialSource:1.7.4' // when md5 publishes

    // because curse
    implementation 'org.apache.httpcomponents:httpclient:4.3.3'
    implementation 'org.apache.httpcomponents:httpmime:4.3.3'

    // mcp stuff
    shade 'de.oceanlabs.mcp:RetroGuard:3.6.6'
    shade 'de.oceanlabs.mcp:mcinjector:3.4-SNAPSHOT'
    shade 'net.minecraftforge.srg2source:Srg2Source:3.3-SNAPSHOT'

    // The old version used by S2S is gone, so we need to force the latest build of that minor release
    shade('org.eclipse.jdt:org.eclipse.jdt.core:3.10.0.+')
    //Stuff used in the GradleStart classes
    implementation 'com.mojang:authlib:1.5.16'
    implementation "net.minecraft:launchwrapper:1.11"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'forgegradle.version.txt'
        expand 'version': project.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'forgegradle.version.txt'
    }
}

jar {

    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }

    manifest {
        attributes 'version':project.version
        attributes 'javaCompliance': project.targetCompatibility
        attributes 'group':project.group
        attributes 'Implementation-Version': project.version + "-" + GIT_INFO.hash
    }
}

javadoc {
    classpath += configurations.implementation
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc
}

artifacts {
    archives jar
    //archives javadocJar
}

test {
    // These tests are outdated, and I can't be arsed to fix them
    exclude "*"
    // if (project.hasProperty("filesmaven")) // disable this test when on the forge jenkins
    //     exclude "**/ExtensionMcpMappingTest*"
}

license {
    ext {
        description = 'A Gradle plugin for the creation of Minecraft mods and MinecraftForge plugins.'
        year = '2013'
        fullname = 'Minecraft Forge'
    }
    header rootProject.file('HEADER')
    include '**net/minecraftforge/gradle/**/*.java'
    excludes ([
        '**net/minecraftforge/gradle/util/ZipFileTree.java',
        '**net/minecraftforge/gradle/util/json/version/*',
        '**net/minecraftforge/gradle/util/patching/Base64.java',
        '**net/minecraftforge/gradle/util/patching/ContextualPatch.java'
    ])
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

pluginBundle {
    website = 'http://www.gradle.org/'
    vcsUrl = 'https://github.com/MinecraftForge/ForgeGradle'
    description = 'Gradle plugin for all Minecraft mod development needs'
    tags = ['forge', 'minecraft', 'minecraftforge', 'sponge', 'mcp']

    plugins {
        patcher {
            id = 'net.minecraftforge.gradle.patcher'
            displayName = 'Minicraft Patcher Plugin'
        }
        tweakerClient {
            id = 'net.minecraftforge.gradle.tweaker-client'
            displayName = 'Mincraft Client Tweaker Plugin'
        }
        tweakerServer {
            id = 'net.minecraftforge.gradle.tweaker-server'
            displayName = 'Mincraft Server Tweaker Plugin'
        }
        forge {
            id = 'net.minecraftforge.gradle.forge'
            displayName = 'MincraftForge Mod Development Plugin'
        }

        launch4j {
            id = 'net.minecraftforge.gradle.launch4j'
            displayName = 'Specialized Launch4J Gradle Plugin'
        }
    }
}

// write out version so its convenient for doc deployment
file('build').mkdirs()
file('build/version.txt').text = version;